<?xml version = "1.0" encoding = "UTF-8" ?>
<!-- Version 0.0.1C -->
<!-- 2011-09-22  Peter Bosmans -->
<!-- XML-file for the Kiewit_Digital-In-v4 module -->
<vscp>
<module>
	<name>Button Module</name>
 	<model>A</model>
	<version>0.0.2</version>
	<changed>2011-11-26</changed>
   <description lang="en">This VSCP module sends VSCP events when a button/switch is used.</description>
  	<infourl>http://www.vscp.org/wiki/doku.php/smart_relay_control_-_intelligent_relay_control_module</infourl>
  	<buffersize>8</buffersize>
   <manufacturer>	
   	<name>petbos</name>
      <address>
      	<street>Zavelvennestraat 157A</street>
         <city>Hasselt</city>
         <postcode>3500</postcode>
         <country>Belgium</country>
     	</address>
      <telephone>									
      	<number>+32 11 231107</number>
        <description lang="en" >Main Reception</description>
   	</telephone>
   	<email>
		<address>pbosmans@telenet.be</address>
		<description>Support email</description>
	</email>
   	<email>
		<address>pbosmans@telenet.be</address>
		<description>Sales inquires email</description>
	</email>
   	<email>
		<address>pbosmans@telenet.be</address>
		<description>General email</description>
	</email>	
        <web>
		<address>http://www.eurosource.se</address>
		<description>Main web site</description>
	</web>					
	</manufacturer>  

	
	<boot>
		<algorithm>1</algorithm>
		<blocksize>8</blocksize>
		<blockcount>4096</blockcount>
	</boot>
	
	
	<registers>        

      <reg page="0" offset="0" >
			<name lang="en">Zone</name>
			<description lang="en">Zone this module belongs to</description>
			<access>rw</access>
		</reg>

		<reg page="0" offset="1" >
			<name lang="en">Subzone</name>
			<description lang="en">Subzone this module belongs to</description>
			<access>rw</access>
		</reg>

		<reg page="0" offset="2" >
			<name lang="en">Subzone for button1</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="3" >
			<name lang="en">Subzone for button2</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="4" >
			<name lang="en">Subzone for button3</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="5" >
			<name lang="en">Subzone for button4</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		
		
		<reg page="0" offset="6" >
			<name lang="en">Subzone for button5</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		
		
		<reg page="0" offset="7" >
			<name lang="en">Subzone for button6</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="8" >
			<name lang="en">Subzone for button7</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="10" >
			<name lang="en">Subzone for button9</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="11" >
			<name lang="en">Subzone for button10</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="12" >
			<name lang="en">Subzone for button11</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="13" >
			<name lang="en">Subzone for button12</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="14" >
			<name lang="en">Subzone for button13</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="15" >
			<name lang="en">Subzone for button14</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="16" >
			<name lang="en">Subzone for button15</name>
			<description lang="en">
			This is a subzone related to this specific button. If zero the the module subzone will be used else the button sub zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

    
		<reg page="0" offset="17" >
			<name lang="en">Zone for button1</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="18" >
			<name lang="en">Zone for button2</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="19" >
			<name lang="en">Zone for button3</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="20" >
			<name lang="en">Zone for button4</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="21" >
			<name lang="en">Zone for button5</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="22" >
			<name lang="en">Zone for button6</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="23" >
			<name lang="en">Zone for button7</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="24" >
			<name lang="en">Zone for button8</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access></access>
		</reg>		

		<reg page="0" offset="25" >
			<name lang="en">Zone for button9</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="26" >
			<name lang="en">Zone for button10</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="27" >
			<name lang="en">Zone for button11</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="28" >
			<name lang="en">Zone for button12</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="29" >
			<name lang="en">Zone for button13</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="30" >
			<name lang="en">Zone for button14</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="31" >
			<name lang="en">Zone for button15</name>
			<description lang="en">
			This is a zone related to this specific button. If zero the the module zone will be used else the button zone will be used. 
			</description>
			<access>rw</access>
		</reg>		


		<reg page="0" offset="32" >
			<name lang="en">Button1 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		
		
		<reg page="0" offset="33" >
			<name lang="en">Button2 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		
		<reg page="0" offset="34" >
			<name lang="en">Button3 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		
		<reg page="0" offset="35" >
			<name lang="en">Button4 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		
		<reg page="0" offset="36" >
			<name lang="en">Button5 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		
		<reg page="0" offset="37" >
			<name lang="en">Button6 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="38" >
			<name lang="en">Button7 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="39" >
			<name lang="en">Button8 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access></access>
		</reg>		

		<reg page="0" offset="40" >
			<name lang="en">Button9 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="41" >
			<name lang="en">Button10 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="42" >
			<name lang="en">Button11 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="43" >
			<name lang="en">Button12 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="44" >
			<name lang="en">Button13 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="45" >
			<name lang="en">Button14 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

		<reg page="0" offset="46" >
			<name lang="en">Button15 control register</name>
			<description lang="en">
			The button control bits enable/disable intelligent button functionality:\n
			Bit 0 - If set: Sends an button pressed event.\n
			Bit 1 - If set: Sends an button released event.\n
			Bit 2 - If set: Follow the button. Sends an event according bit 0 and bit 1.\n
			        If not set: Sends a button event on a button flank according bit 3.\n
			Bit 3 - If set: Send a button event on the button down flank.\n
			        If not set: Send a button event on the button up flank.\n
			Bit 4 5 6 - Timer bits : With the combination of these bits, you can get different kinds of timers.\n
						Send a .... event when the timer (timer x ....) times out.\n
				000 (0) = No timer.\n
				001 (1) = 10 ms timer.\n
				010 (2) = 100ms timer.\n
				011 (3) = 1s timer.\n
				100 (4) = 10s timer.\n
				101 (5) = 100s timer.\n
				110 (6) = 1000s timer.\n
				111 (7) = 10000s timer.\n
			Bit 7 - If set: Invert the button input-signal.\n
			        If not set: Don't invert the button input-signal.\n
			</description>
			<access>rw</access>
		</reg>		

    
		<reg page="0" offset="47" >
			<name lang="en">Button timeout register for button 1</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="48" >
			<name lang="en">Button timeout register for button 2</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="49" >
			<name lang="en">Button timeout register for button 3</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="50" >
			<name lang="en">Button timeout register for button 4</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="51" >
			<name lang="en">Button timeout register for button 5</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="52" >
			<name lang="en">Button timeout register for button 6</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="53" >
			<name lang="en">Button timeout register for button 7</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="54" >
			<name lang="en">Button timeout register for button 8</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access></access>
		</reg>
		
		<reg page="0" offset="55" >
			<name lang="en">Button timeout register for button 9</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="56" >
			<name lang="en">Button timeout register for button 10</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="57" >
			<name lang="en">Button timeout register for button 11</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="58" >
			<name lang="en">Button timeout register for button 12</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="59" >
			<name lang="en">Button timeout register for button 13</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="60" >
			<name lang="en">Button timeout register for button 14</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="61" >
			<name lang="en">Button timeout register for button 15</name>
			<description lang="en">
			This is the button timeout register. An event, which can be defined in the DM, will be send when the button will be pushed this timeout.\n
			Set to zero to disable (default). This time is a product of this value with the choosen type of timer.\n
			The registers can be as an example be used to send an CLASS:Information TYPE:Goodnight event.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="62" >
			<name lang="en">Button 1-7 status register</name>
			<description lang="en">
			This register gives the current button input status.\n
		    Bit 1 (LSB) gives the status of button 1, Bit 2 status button2, etc...\n
			</description>
			<access>r</access>
		</reg>
		
		<reg page="0" offset="63" >
			<name lang="en">Button 9-14 status register</name>
			<description lang="en">
			This register gives the current button input status.\n
      		Bit 1 (LSB) gives the status of button 9, Bit 2 status button10, etc...\n
			</description>
			<access>r</access>
		</reg>
		
		
		<!-- DM Row 1 -->
		<reg page="0" offset="72" >
			<name lang="en">Decision matrix row 1: Oaddr </name>
			<description lang="en">
      		Row 1 of decision matrix. Originating address.\n 
            Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="73" >
			<name lang="en">Decision matrix row 1: flags </name>
			<description lang="en">
			Row 1 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="74" >
			<name lang="en">Decision matrix row 1: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="75" >
			<name lang="en">Decision matrix row 1: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="76" >
			<name lang="en">Decision matrix row 1: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="77" >
			<name lang="en">Decision matrix row 1: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="78" >
			<name lang="en">Decision matrix row 1: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="79" >
			<name lang="en">Decision matrix row 1: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>						
		
		<!-- DM Row 2 -->
		<reg page="0" offset="80" >
			<name lang="en">Decision matrix row 2: Oaddr </name>
			<description lang="en">
      row 2 of decision matrix. Originating address. Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="81" >
			<name lang="en">Decision matrix row 2: flags </name>
			<description lang="en">
			row 2 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="82" >
			<name lang="en">Decision matrix row 2: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="83" >
			<name lang="en">Decision matrix row 2: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="84" >
			<name lang="en">Decision matrix row 2: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="85" >
			<name lang="en">Decision matrix row 2: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="86" >
			<name lang="en">Decision matrix row 2: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="87" >
			<name lang="en">Decision matrix row 2: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>						

		<!-- DM Row 3 -->
		<reg page="0" offset="88" >
			<name lang="en">Decision matrix row 3: Oaddr </name>
			<description lang="en">
            row 3 of decision matrix. Originating address. Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="89" >
			<name lang="en">Decision matrix row 3: flags </name>
			<description lang="en">
			row 3 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="90" >
			<name lang="en">Decision matrix row 3: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="91" >
			<name lang="en">Decision matrix row 3: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="92" >
			<name lang="en">Decision matrix row 3: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="93" >
			<name lang="en">Decision matrix row 3: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="94" >
			<name lang="en">Decision matrix row 3: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="95" >
			<name lang="en">Decision matrix row 3: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>						
		
		<!-- DM Row 4 -->
		<reg page="0" offset="96" >
			<name lang="en">Decision matrix row 4: Oaddr </name>
			<description lang="en">
      row 4 of decision matrix. Originating address. Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="97" >
			<name lang="en">Decision matrix row 4: flags </name>
			<description lang="en">
			row 4 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="98" >
			<name lang="en">Decision matrix row 4: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="99" >
			<name lang="en">Decision matrix row 4: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="100">
			<name lang="en">Decision matrix row 4: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="101" >
			<name lang="en">Decision matrix row 4: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="102" >
			<name lang="en">Decision matrix row 4: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="103" >
			<name lang="en">Decision matrix row 4: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>						
		
		<!-- DM Row 5 -->
		<reg page="0" offset="104" >
			<name lang="en">Decision matrix row 5: Oaddr </name>
			<description lang="en">
      row 5 of decision matrix. Originating address. Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="105" >
			<name lang="en">Decision matrix row 5: flags </name>
			<description lang="en">
			row 5 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="106" >
			<name lang="en">Decision matrix row 5: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="107" >
			<name lang="en">Decision matrix row 5: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="108" >
			<name lang="en">Decision matrix row 5: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="109" >
			<name lang="en">Decision matrix row 5: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="110" >
			<name lang="en">Decision matrix row 5: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="111" >
			<name lang="en">Decision matrix row 5: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>						
		
		<!-- DM Row 6 -->
		<reg page="0" offset="112" >
			<name lang="en">Decision matrix row 6: Oaddr </name>
			<description lang="en">
      row 6 of decision matrix. Originating address. Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="113" >
			<name lang="en">Decision matrix row 6: flags </name>
			<description lang="en">
			row 6 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="114" >
			<name lang="en">Decision matrix row 6: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="115" >
			<name lang="en">Decision matrix row 6: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="116" >
			<name lang="en">Decision matrix row 6: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="117" >
			<name lang="en">Decision matrix row 6: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="118" >
			<name lang="en">Decision matrix row 6: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="119" >
			<name lang="en">Decision matrix row 6: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>						
		
		<!-- DM Row 7 -->
		<reg page="0" offset="120" >
			<name lang="en">Decision matrix row 7: Oaddr </name>
			<description lang="en">
      row 7 of decision matrix. Originating address. Not used.
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="121" >
			<name lang="en">Decision matrix row 7: flags </name>
			<description lang="en">
			row 7 of decision matrix. Flags. Set selection behaviour.\n
			The enable bit can be used to disable a decision matrix row.\n
			The check orginating address bit. If set, the button index and the originating address\n
            should be tesame to trigger the DM row.\n
 			The zone and use subzone bits. If set, 255 will be send as zone and/or subzone.\n
            Otherwise the buttons zone/subzone (if zero, then de modules zone, subzone) will be send.\n
			</description>
			<access>rw</access>
			<bit pos="0" default="0" >
				<name lang="en">Class filter bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="1" default="0" >
				<name lang="en">Class mask bit 8</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>			
			<bit pos="2" default="false" >
				<name lang="en">Reserved bit</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="3" default="false" >
				<name lang="en">Subzone match</name>
      	   <description lang="en">Set subzone to be sended at 255.</description> 
			</bit>
			<bit pos="4" default="false" >
				<name lang="en">Zone match</name>
      	   <description lang="en">Set zone to be sended at 255.</description> 
			</bit>
			<bit pos="5" default="false" >
				<name lang="en">Hardcoded</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>	
			<bit pos="6" default="false" >
				<name lang="en">Check Originating address</name>
      	   <description lang="en">This bit is not used.</description> 
			</bit>
			<bit pos="7" default="false" >
				<name lang="en">Enable</name>
      	   <description lang="en">Enable (1) or disable (0)the decison matrix row.</description> 
			</bit>												
		</reg>		
		
		<reg page="0" offset="122" >
			<name lang="en">Decision matrix row 7: Class </name>
			<description lang="en">
			The event-class that should be send.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="123" >
			<name lang="en">Decision matrix row 7: Class filter (low eight bits) </name>
			<description lang="en">
			Not used.\n
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="124" >
			<name lang="en">Decision matrix row 7: Type</name>
			<description lang="en">
			The event-type that should be send.\n		
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="125" >
			<name lang="en">Decision matrix row 7: Type filter</name>
			<description lang="en">
			Not used.\n	
			</description>
			<access>rw</access>
		</reg>	
		
		<reg page="0" offset="126" >
			<name lang="en">Decision matrix row 7: Action</name>
			<description lang="en">
			Not used.\n		
			</description>
			<access>rw</access>
		</reg>
		
		<reg page="0" offset="127" >
			<name lang="en">Decision matrix row 7: Action parameter</name>
			<description lang="en">
			This parameters will be send as the reserved byte.\n
			</description>
			<access>rw</access>
		</reg>
	</registers>						
		
	<!-- Decison matrix -->
	<dmatrix>
  
		<level>1</level>					
		<start page="0" offset="72"/> 	
		<rowcnt>7</rowcnt>			 
					
		 
	</dmatrix>
	
	
</module>	
</vscp>	
