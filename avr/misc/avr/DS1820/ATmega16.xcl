//////////////////////////////////////////////////////////////////////////////
//                      - ATmega16.xcl -                                    //
//                                                                          //
//   XLINK command file for the ICCA90 C-compiler using the -v3, -ms        //
//   options. Segments are defined for an ATmega16 without external memory. //
//                                                                          //
//   Usage: xlink your_file(s) -f ATmega16                                  //
//                                                                          //    
//   File version:                                                          //
//                  $Log: ATmega16.xcl,v $
//                  Revision 1.0  2002/07/19 21:00:00  shaugen
//                                                 
//                                                                          //
//////////////////////////////////////////////////////////////////////////////


// Modify the lines below to alter the size of the RSTACK and CSTACK segments.
// These need to be fine tuned to suit your specific application.
// The '_..X_' prefix on the symbols are only there so that 
// CSPY may filter the symbols in the dissassembly window.
//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    -D_..X_CSTACK_SIZE=100   // bytes for auto variables and register save. 
    -D_..X_RSTACK_SIZE=30   // 30 bytes for return addresses, equivalent to 
                            // 15 levels of calls, including interrupts. 
    -D_..X_RAMEND=45F
    -D_..X_FLASHEND=3FFF
    -D_..X_INTVEC_SIZE=54   // 21 Interrupt vectors * 4 bytes each
//____________________________________________________________________________


// Define CPU 
//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    -ca90
//____________________________________________________________________________



// The following segments are located in the internal memory of
// the AVR controller. Do not change these lines.

// Code memory 
//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1) 

    // Fill unused interrupt vector's with RETI
    //-H1895
    //-h(CODE)0-_..X_INTVEC_SIZE

    -Z(CODE)RCODE,SWITCH,FLASH,CODE=_..X_INTVEC_SIZE-_..X_FLASHEND

    // Initializers
    -Z(CODE)CDATA0,CDATA1,CCSTR=_..X_INTVEC_SIZE-_..X_FLASHEND
//____________________________________________________________________________


// Data memory
//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    -Z(DATA)IDATA0,UDATA0,ECSTR=60-_..X_RAMEND
    -Z(DATA)CSTACK+_..X_CSTACK_SIZE=60-_..X_RAMEND
    -Z(DATA)RSTACK+_..X_RSTACK_SIZE=60-_..X_RAMEND
    -Z(DATA)IDATA1,UDATA1,NO_INIT=60-_..X_RAMEND
//____________________________________________________________________________


//  Select reduced "printf" support to reduce library size.
//  See configuration section in manual concerning printf/sprintf. 
//  Disable floating-point support in "scanf" to reduce library size.
//  See configuration section in manual concerning scanf/sscanf 

// Selecting the write formatter version
// The selection of a write formatter is made in the XLINK control file. 
// The default selection, _small_write, is made by the line:
// -e_small_write=_formatted_write
// To select _medium_write, replace this line with:
// -e_medium_write=_formatted_write
// To select the full ANSI version, remove this line.

//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    -e_small_write=_formatted_write
    -e_small_write_P=_formatted_write_P
	
    -e_medium_read=_formatted_read
    -e_medium_read_P=_formatted_read_P
//____________________________________________________________________________


// Suppress one warning which is not relevant for this processor 
//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    -w29
//____________________________________________________________________________


//  Now load the 'C' library 
//¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
    cl3s-e
//____________________________________________________________________________

